@section Styles
{		
	<link href="~/lib/font-awesome/css/all.css" rel="stylesheet" />
	<style>
		.titleName td {
			font-size: 20px;
		}
	</style>
}

<div id="app" class="container">
	<div class="form-group">
		@*新增按鍵*@
		<!-- Modal trigger button -->
		<button type="button" @@click="showInsert()" class="btn btn-primary btn-lg" data-bs-toggle="modal" data-bs-target="#insertPage" style="margin: 33px 0px">
			新增員工
		</button>

		<div class="col-md-9">
			@*篩選欄位*@
			<div class="row" style="width:40%; margin-right:auto; margin-left:0px;">
				<label class="col-md-5">搜尋員工:</label>
				<input class="form-contro col-md-5" style="width:150px; margin-left: -50px; margin-bottom:20px;" placeholder="輸入關鍵字"
					   v-model="filter" @@keyup="filterEmployeeManagementDTO()" />
			</div>
		</div>
	</div>
	@*表格標題*@
	<div class="form-group">
		<table class="table table-striped table-hover">
			<thead>
				<tr class="titleName">
					<td>員工編號</td>
					<td>員工姓名</td>
					<td>性別</td>
					<td>生日</td>
					<td>電話</td>
					<td>Email</td>
					<td>編輯</td>
					@*			<td>詳細資料</td>
					<td>薪資</td>*@
				</tr>
			</thead>
			@*表格內容*@
			<tbody>
				<tr v-for="item in EmployeeManagementDTO">
						<td>{{item.employeeId}}</td>
						<td>{{item.name}}</td>
						<td>{{item.gender}}</td>
						<td>{{item.birthday}}</td>
						<td>{{item.phone}}</td>
						<td>{{item.email}}</td>
					@*<td>"詳細資料"</td>
						<td>"薪資"</td>*@
						<td>
							<a class="btn edit" @@click="edit(item.employeeId)"><i class="fa-solid fa-pen" title="Edit"></i></a>
							<a class="btn delete" @@click="deleteEmp(item.employeeId)"><i class="fa-solid fa-trash-can" title="Delete"></i></a>
						</td>
				</tr>
			<tbody>
		</table>
	</div>
	@*新增用的互動視窗*@
	<div class="form-group">
		<div class="modal fade" id="insertPage" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
			<div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-sm" role="document">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="modalTitleId" style="color: black;">新增</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body" style="color:white; background-color: brown;">
						@*頁面內容Body*@
						<div class="form-group">
							<label class="form-label">員工姓名:</label>
							<input class="form-control" v-model="name" />
						</div>
						<div class="form-group">
							<label class="form-label">性別:</label>
							<input class="form-control" v-model="gender" />
						</div>
						<div class="form-group">
							<label class="form-label">生日:</label>
							<input class="form-control" v-model="birthday" />
						</div>
						<div class="form-group">
							<label class="form-label">電話:</label>
							<input class="form-control" v-model="phone" />
						</div>
						<div class="form-group">
							<label class="form-label">Email:</label>
							<input class="form-control" v-model="email" />
						</div>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
						<button type="button" @@click="createEmp" class="btn btn-primary">新增</button>
					</div>
				</div>
			</div>
		</div>
	</div>
	@*編輯用的互動視窗*@
	<div class="form-group">
		<div class="modal fade" id="editModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
			<div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-sm" role="document">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="modalTitleId" style="color: black;">編輯</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body" style="color:white; background-color: brown;">
						@*頁面內容Body*@
						<div class="form-group">
							<label class="form-label">員工姓名:</label>
							<input class="form-control" v-model="name" />
						</div>
						<div class="form-group">
							<label class="form-label">性別:</label>
							<input class="form-control" v-model="gender" />
						</div>
						<div class="form-group">
							<label class="form-label">生日:</label>
							<input class="form-control" v-model="birthday" />
						</div>
						<div class="form-group">
							<label class="form-label">電話:</label>
							<input class="form-control" v-model="phone" />
						</div>
						<div class="form-group">
							<label class="form-label">Email:</label>
							<input class="form-control" v-model="email" />
						</div>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
						<button type="button" @@click="createEmp" class="btn btn-primary">儲存</button>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>



@section Scripts 
	{
		<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
		<script>
			new Vue({
				el: '#app',
				data: {
					EmployeeManagementDTO: [],
					filter: '',
					name:'',
					gender:'',
					birthday:'',
					email:'',
					phone:'',
					},
					mounted: function () {
						let self = this;
						self.getEmp();
					},
					methods: {
						getEmp:function(){
							let self = this;
							axios.get("/api/EmployeeManagementApi/GetAll")
							.then(function(res){
								self.EmployeeManagementDTO = res.data;
							})
						},
						filterEmployeeManagementDTO: function () {
							let self = this;
							var request = {};
							request.EmployeeId = isNaN(Number(self.filter)) ? -1 : Number(self.filter);
							request.Name = request.Phone = request.Email = self.filter;
							axios.post("/api/EmployeeManagementApi/FilterEmployees", requset)
								.then(response => {
									self.EmployeeManagementDTO = response.data;
									var EmployeeList = [];
									for (var i = 0; i < self.EmployeeManagementDTO.length; i++) {
									var item = self.EmployeeManagementDTO[i];
										item.Edit = false;
										EmployeeList.push(item);
									}
									self.EmployeeManagementDTO = EmployeeList;
								});
						},
						update: function (empDTO) {
							let self = this;
							alert("update");
						},
						cancel: function () {
							alert("cancel");
						},
						edit: function (emplyeeId) {
							let self = this;
							alert("edit");
						},
						deleteEmployee: function (employeeId) {
							let self = this;
							alert("delete");
						},
							showInsert: function () {
							$("#insertModal").modal("show");
						},
					}
				});

			</script>
}

