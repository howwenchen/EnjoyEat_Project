@section Styles{
    <style>
        .form-myself{
        display: block;
        width: 100%;
        padding: .375rem .75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #6C7293;
        background-color: #000;
        background-clip: padding-box;
        border: 1px solid #000;
        appearance: none;
        border-radius: 5px;
        transition: border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out;
    }
    textarea.form-myself{
            min-height: calc(1.5em + 0.75rem + 2px);
    }
    
        #btngroup {
            display: flex;
            white-space: nowrap;
            min-width: 55px;
        }
        #createBtn{
            width: 10%;
            box-sizing: border-box;
            white-space: nowrap; /* 防止文字換行 */
            overflow: hidden;
            width:10%;
            min-width: 50px;
        }

        /*搜尋input*/
        #searchText {
            margin-left:auto;
            margin-right: 0px;
            text-align: center;
            width: 20%;
            min-width: 200px;
        }

        td input{
            background-color: #6c757d;
            color: lightgray;
            border-radius: 5px;
            width: 90%;
            border: 1px solid gray;
            text-align:left;
            margin:0px;
        }

        /*新增訂位訊息的modal*/
        .modal-content {
            background-color: #191C24
        }
        #create_container input{
            background: #E8F0EF;
            border-radius: 5px;
        }

        #modal_container input, #modal_container select, #modal_container textarea {
            background: #E8F0EF;
            color:black;
            border-radius: 5px;
            width:50%;
        }

        .modal-footer button {
            background-color: #6c757d;
            border-radius: 5px;
        }

        textarea {
            resize: none; /*不讓使用者调整 <textarea> 元素的大小*/
            overflow: auto; /*需要時顯示滾輪條  */
            height: 20px;
            background-color: #E8F0EF;
        }

      
    </style>
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vue2-datepicker@3.11.0/index.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.5/dist/sweetalert2.all.min.js"></script>

<!-- Table Start -->
<div class="container-fluid pt-4 px-4">
    <div class="row g-4">
        <div class="bg-secondary rounded h-100 p-4" id="app">
            <h6 class="mb-4">訂位系統</h6>
          
            <div class="col-12 row">
                <button class="btn btn-primary col-md-1" id="createBtn" data-bs-toggle="modal" data-bs-target="#createModal">新增</button>
                <input class="form-control col-md-4" type="text" v-model="searchText" id="searchText" placeholder="搜尋" @@keyup="filterReserve" />
            </div>
     
            <div class="table-responsive">
                <table class="table" overflow=”auto”>
                    <thead>
                        <tr>
                            <th id="serial">#</th>
                            <th id="Name">訂位姓名</th>
                            <th id="Phone">電話</th>
                            <th id="AdultNumber">大人人數</th>
                            <th id="KidNumber">小孩人數</th>
                            <th id="DateTime">用餐日期</th>
                            <th id="MealTime">用餐時間</th>
                            <th id="Note">備註</th>
                            <th id="Operation">操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="rev in reserveInfo">
                            <template v-if="rev.editStatus==false">
                                <td scope="row">{{rev.reserveId}}</td>
                                <td>{{rev.reservationName}}</td>
                                <td>{{rev.phoneNumber}}</td>
                                <td>{{rev.numberofAdultGuest}}</td>
                                <td>{{rev.numberofKidGuest}}</td>
                                <td>{{rev.reservationDate}}</td>
                                <td>{{rev.reservationTime}}</td>
                                <td>{{rev.note}}</td>
                                <td>
                                    <div id="btngroup">
                                    <button id="deletebtn" type="button" class="btn btn-secondary btn-sm" @@click="edit(rev.reserveId)">編輯</button>
                                    <button id="editbtn" type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#deleteModal" @@click="send(rev.reserveId)">刪除</button>
                                    </div>
                                </td>
                            </template>
                            <template v-else>
                                <td scope="row">{{rev.reserveId}}</td>
                                <td><input id="reservationNameInput" v-model="rev.reservationName" /></td>
                                <td><input id="phoneNumberInput" v-model="rev.phoneNumber" /></td>
                                <td><input id="AdultGuestInput" v-model="rev.numberofAdultGuest" /></td>
                                <td><input id="KidGuestInput" v-model="rev.numberofKidGuest" /></td>
                                <td><input id="DateInput" v-model="rev.reservationDate" /></td>
                                <td><input id="TimeInput" v-model="rev.reservationTime" /></td>
                                <td><input id="noteinput" v-model="rev.note" /></td>
                                <td>
                                    <div id="btngroup">
                                    <button id="editbtn" type="button" class="btn btn-secondary btn-sm" @@click="update(rev)">儲存</button>
                                    <button id="deletebtn" type="button" class="btn btn-primary btn-sm" @@click="cancel(rev.reserveId)">取消</button>
                                    </div>
                                </td>
                            </template>
                        </tr>
                    </tbody>
                </table>
            </div>
            <!-- Table End -->
            <!--Edit Modal-->
            <div class="modal fade bookingdModal" id="createModal" data-bs-backdrop="static"
                 data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel"
                 aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title" id="staticBackdropLabel">新增訂位</h3>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body container" id="create_container">

                            <div id=" col-12 col-xl-6 row">
                            <label for="datepicker" class="col-12 col-form-label">用餐日期：</label>
                                <date-picker  v-model="create.reserveDate"
                                             value-type="format"
                                             name="ReserveDate"
                                             id="datepicker"
                                             class="datepicker p-0"
                                             :disabled-date="disablerange"
                                >
                            </date-picker>
                            </div>
                            <div id="modal_container">
                            <label class="col-md-8 "for="create_reserveName">訂位姓名：</label>
                                <input class="form-myself col-md-4" v-model="create.ReserveName" type="text" id="create_reserveName">
                            <label for="create_phone">聯絡電話：</label>
                                <input class="form-myself col-2" v-model="create.Phone" type="text" id="create_phone" maxlength="10"
                                       minlength="">
                                <label for="create_phone">Email：</label>
                                <input class="form-myself col-2" v-model="create.Email" type="text" id="create_email">
                            <label>用餐時段：</label>
                                <select class="form-myself col-2" name="" id="ReserveTime" v-model="create.ReserveTime">
                                <option value="" disabled selected></option>
                                <template>
                                    <option :value="t.value" v-for="t in Time">{{t.txt}}</option>
                                </template>
                            </select>

                            <label>大人人數：</label>
                                <select class="form-myself col-2" name="" id="people" v-model="create.Adult">
                                <option value="" disabled selected></option>
                                <template>
                                    <option :value="peo.value" v-for="peo in people">{{peo.txt}}</option>
                                </template>
                            </select>

                            <label>小孩人數：</label>
                                <select class="form-myself col-2" name="" id="Kid" v-model="create.Kid">
                                <option value="" disabled selected></option>
                                <template>
                                    <option :value="k.value" v-for="k in kid">{{k.txt}}</option>
                                </template>
                            </select>
                            <label>備註：</label>
                                <textarea class="form-myself col-2"
                                      name="message"
                                      rows="5"
                                      v-model="create.note"
                                      ></textarea>
                            <div class="validate"></div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <div class="row m-0">
                                <button v-on:click="createbook" class="col btneditproducts m-1" type="button" data-bs-dismiss="modal"><i class="fa-solid fa-square-check"></i> 儲存</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!--Delete Modal -->
            <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5" id="exampleModalLabel">刪除確認</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            確定要刪除資料嗎?
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
                            <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @@click="deleteReserve()">確定</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/vue/vue.min.js"></script>
    <script src="/axios/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue2-datepicker@3.11.0/index.js"></script>

    <script>
        let app = new Vue({
            el: '#app',
            data: {
                reserveInfo: [],
                filterInfo: [],
                bookInfo: [],
                searchText: '',
                original: {
                    reservationName: "",
                    phoneNumber: "",
                    numberofAdultGuest: "",
                    numberofKidGuest: "",
                    reservationDate: null,
                    reservationTime: null,
                    note: "",
                    sendreserveid:"",
                },
                people: [
                    { value: '1位大人', txt: '1位大人' },
                    { value: '2位大人', txt: '2位大人' },
                    { value: '3位大人', txt: '3位大人' },
                    { value: '4位大人', txt: '4位大人' }
                ],
                Time: [
                    { value: "11:00", txt: '11:00' },
                    { value: "13:00", txt: '13:00' },
                    { value: "15:00", txt: '15:00' },
                    { value: "17:00", txt: '17:00' },
                    { value: "19:00", txt: '19:00' }
                ],
                kid: [
                    { value: '0位小孩', txt: '0位小孩' },
                    { value: '1位小孩', txt: '1位小孩' },
                    { value: '2位小孩', txt: '2位小孩' },
                    { value: '3位小孩', txt: '3位小孩' },
                    { value: '4位小孩', txt: '4位小孩' }],
                create: {
                    vueid: '',
                    ReserveDate: null,
                    ReserveTime: null,
                    Adult: '',
                    Kid: '',
                    ReserveName: '',
                    Phone: '',
                    Email:'',
                    note: '',
                }
            },

            methods: {
                filterReserve: function () {
                    let _this = this;
                    var reservelist = [];
                    if (_this.searchText === "") {
                        _this.getreserve();
                    } else {
                        for (var i = 0; i < _this.bookingInfo.length; i++) {
                            var item = _this.bookingInfo[i];
                            var reserveId = item.reserveId;
                            var reservationName = item.reservationName;
                            var phone = item.phone;
                            var reservationDate = item.reservationDate.toString();
                            var reservationTime = item.reservationTime.toString();
                            var numberofAdultGuest = item.numberofAdultGuest;
                            var email = item.email;
                            var numberofKidGuest = item.numberofKidGuest;
                            var note = item.note;

                            var regex = new RegExp(_this.searchText, 'i');

                            if (
                                regex.test(reserveId) ||
                                regex.test(reservationName) ||
                                regex.test(reservationDate) ||
                                regex.test(reservationTime) ||
                                regex.test(phone) ||
                                regex.test(numberofAdultGuest) ||
                                regex.test(numberofKidGuest) ||
                                regex.test(email) ||
                                regex.test(note)
                            ) {
                                reservelist.push(item);
                            }
                        }
                    }
                    _this.reserveInfo = reservelist;
                },
                formatDate: function () {
                    for (var i = 0; i < this.reserveInfo.length; i++) {
                        let date = new Date(this.reserveInfo[i].reservationDate);
                        this.reserveInfo[i].reservationDate = date.getFullYear() + '-' + (date.getMonth() + 1).toString().padStart(2, '0') + '-' + date.getDate().toString().padStart(2, '0')
                    }
                },
                disablerange: function (date) {
                    var today = new Date();
                    today.setHours(0, 0, 0, 0);
                    var mindate = new Date(today.getTime() + 1 * 24 * 3600 * 1000);
                    var maxdate = new Date(today.getTime() + 30 * 24 * 3600 * 1000);

                    return date < mindate || date > maxdate;
                },
                handleModalClose: function () {
                    document.body.classList.add('modal-closed');
                },
                edit: function (reserveId) {
                    let _this = this;
                    var temp = [];
                    for (let i = 0; i < _this.reserveInfo.length; i++) {
                        let item = _this.reserveInfo[i];
                        if (reserveId == item.reserveId) {
                            item.editStatus = true;
                            _this.original.reservationName = item.reservationName;
                            _this.original.phoneNumber = item.phoneNumber;
                            _this.original.numberofAdultGuest = item.numberofAdultGuest;
                            _this.original.numberofKidGuest = item.numberofKidGuest;
                            _this.original.reservationDate = item.reservationDate;
                            _this.original.reservationTime = item.reservationTime;
                            _this.original.note = item.note;
                        }
                        temp.push(item)
                    }
                    _this.reserveInfo = temp;
                },
                cancel: function (reserveId) {
                    let _this = this;
                    var temp = [];
                    for (let i = 0; i < _this.reserveInfo.length; i++) {
                        let item = _this.reserveInfo[i];
                        if (reserveId == item.reserveId) {
                            item.editStatus = false;
                            item.reservationName = _this.original.reservationName;
                            item.phoneNumber = _this.original.phoneNumber;
                            item.numberofAdultGuest = _this.original.numberofAdultGuest;
                            item.numberofKidGuest = _this.original.numberofKidGuest;
                            item.reservationDate = _this.original.reservationDate;
                            item.reservationTime = _this.original.reservationTime;
                            item.note = _this.original.note;
                        }
                        temp.push(item)
                    }
                    _this.reserveInfo = temp;
                },
                update: function (rev) {
                    let _this = this;
                    let request = {
                        ReservationName: rev.reservationName,
                        PhoneNumber: rev.phoneNumber,
                        NumberofAdultGuest: rev.numberofAdultGuest,
                        NumberofKidGuest: rev.numberofKidGuest,
                        ReservationDate: rev.reservationDate,
                        ReservationTime: rev.reservationTime,
                        Note: rev.note,
                    };
                    axios.put(`/api/ReservationManagementApi/EditReservationManagement/${rev.reserveId}`, request)
                        .then(response => {
                            _this.getreserve()
                        });
                },
                getreserve: function () {
                    let _this = this;
                    axios.get("/api/ReservationManagementApi/GetReservationManagement").then(
                        response => {                    
                            _this.reserveInfo = response.data;
                            _this.bookingInfo = response.data;
                            _this.formatDate();
                            var temp = [];
                            for (var i = 0; i < _this.reserveInfo.length; i++) {
                                var item = _this.reserveInfo[i];
                                item.editStatus = false;
                                temp.push(item);
                            }
                            _this.reserveInfo = temp;
                        }
                    );
                },
                send: function (reserveId) {
                    this.sendreserveid = reserveId;
                    this.sendreserveid = reserveId;
                },
                deleteReserve: function () {
                    //alert("delete")
                    let _this = this;
                    let reserveId = _this.sendreserveid;
                        axios.delete(`/api/ReservationManagementApi/DeleteReservationManagement/${reserveId}`)
                            .then(response => {
                                _this.getreserve();
                            Swal.fire({
                                allowOutsideClick: false,
                                icon: 'success',
                                color: '#333',
                                iconColor: '#D8CDB9',
                                background: '#FFF',
                                text: '刪除成功',
                                //text: '',
                                showConfirmButton: false,
                                timer: 1000,
                                position: 'center'
                            })
                            })
                    
                },
                createbook: function () {
                    let _this = this;
                    var request = {
                        ReservationDate: _this.create.reserveDate,
                        reservationTime: _this.create.ReserveTime,
                        numberofAdultGuest: _this.create.Adult,
                        numberofKidGuest: _this.create.Kid,
                        phoneNumber: _this.create.Phone,
                        email:_this.create.Email,
                        reservationName: _this.create.ReserveName,
                        note: _this.create.note,
                    };
                    axios.post(`/api/ReservationManagementApi/PostReservationManagement`, request)
                        .then(response => {
                            _this.getreserve()
                            Swal.fire({
                                allowOutsideClick: false,
                                icon: 'success',
                                color: '#333',
                                iconColor: '#D8CDB9',
                                background: '#FFF',
                                text: '儲存成功',
                                //text: '',
                                showConfirmButton: false,
                                timer: 1000,
                                position: 'center'
                            })
                        });
                },

            },
            mounted: function () {
                let _this = this;
                _this.getreserve();
            }
        });
    </script>
}
