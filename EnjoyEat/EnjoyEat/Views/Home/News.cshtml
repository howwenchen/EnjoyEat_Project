@section Styles{
    <style>
    .pagination .page-link {
        background-color: black;
        color: white;
        border-color: lightgray;
    }
    .pagenumber{
        background-color:white;
        color:black;
    }
    .modal-body h5{
        padding:5px ;
        display:inline-block;
        color:white;
        background-color:darkgrey;
        border-radius:0.7em;
        font-weight:800;
    }
    .modal-header{
        background-color:rgba(0,0,0,0.7);
        color:white;
    }
    
    </style>
}

<div id="app">
    <div class="row">
        <div class="col-sm-6 col-lg-3 mb-4" v-for="news in currentPageNews" v-bind:key="news.newsId">
            <div class="card" v-on:click="showModal(news.newsId)">
                <img v-bind:src="news.imageUrl" class="card-img-top" alt="圖片加載中">
                <div class="card-body">
                    <h5 class="card-title text-body">{{ news.category }}</h5>
                    <p class="card-text text-body">{{ news.title }}</p>
                </div>
            </div>

            <!-- 跳窗 -->
            <div class="modal fade" tabindex="-1" v-bind:id="'modal' + news.newsId">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <!-- 跳窗內容 -->
                        <div class="modal-header">
                            <h4 class="modal-title">{{ modalNews.title }}</h4>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body text-body">
                            <span class="badge badge-secondary">{{ modalNews.category }}</span>
                            <p>{{ modalNews.content }}</p>
                        </div>
                        <div class="modal-footer text-body">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- 分頁 -->
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            <li class="page-item" v-on:click="previousPage">
                <a class="page-link" href="#">Previous</a>
            </li>
            <li class="page-item " v-for="page in pageNumbers" v-bind:key="page">
                <a class="page-link" href="#" v-on:click="changePage(page)">{{ page }}</a>
            </li>
            <li class="page-item" v-on:click="nextPage">
                <a class="page-link" href="#">Next</a>
            </li>
        </ul>
    </nav>
</div>


@section Scripts{
    <script>
        Vue.config.devtools = true;
        const app = new Vue({
            el: '#app',
            data: {
                currentPageNews: [],
                currentPage: 1,
                pageNumbers: [],
                modalNews:{}
            },
            mounted: function () {
                this.getPageCount();
                this.changePage(this.currentPage);
            },
            methods: {
                showModal: function (newsId) {
                    console.log(`Clicked newsId: ${newsId}`);
                    this.modalNews = this.currentPageNews.find(news => news.newsId === newsId);
                    if (this.modalNews) {
                        var myModal = new bootstrap.Modal(document.getElementById('modal' + newsId));
                        myModal.show();
                    } else {
                        console.log(`No news item found with newsId ${newsId}`);}
                },
                changePage: function (page) {
                    axios.get("/Home/GetNews/" + page)
                        .then(response => {
                            this.currentPageNews = response.data;
                            this.currentPage = page;
                        })
                        .catch(error => {
                            console.log(error);
                        });
                },
                getPageCount: function () {
                    axios.get("/Home/GetPageCount")
                        .then(response => {
                            this.pageNumbers = Array.from({ length: response.data }, (_, index) => index + 1);
                        })
                        .catch(error => {
                            console.log(error);
                        });
                },
                nextPage: function () {
                    if (this.currentPage < this.pageNumbers.length) {
                        this.changePage(this.currentPage + 1);
                    }
                },
                previousPage: function () {
                    if (this.currentPage > 1) {
                        this.changePage(this.currentPage - 1);
                    }
                },
            }
        });
    </script>
}

