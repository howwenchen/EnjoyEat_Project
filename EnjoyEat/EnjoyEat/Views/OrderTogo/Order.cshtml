@model IEnumerable<EnjoyEat.Models.ViewModel.MenuViewModel>
@section Styles
    {
    <link href="~/orderforhere/startordercss/barfiller.css" rel="stylesheet" />
    <link href="~/orderforhere/startordercss/bootstrap.min.css" rel="stylesheet" />
    <link href="~/orderforhere/startordercss/elegant-icons.css" rel="stylesheet" />
    <link href="~/orderforhere/startordercss/flaticon.css" rel="stylesheet" />
    <link href="~/orderforhere/startordercss/magnific-popup.css" rel="stylesheet" />
    <link href="~/orderforhere/startordercss/nice-select.css" rel="stylesheet" />
    <link href="~/orderforhere/startordercss/slicknav.min.css" rel="stylesheet" />
    <link href="~/css/orderstyle.css" rel="stylesheet" />
    <link href="~/css/style.min.css" rel="stylesheet">
    <style>
        #orderArea {
            display: flex;
            justify-content: space-evenly;
            padding-top: 0;
        }

        .section-bg {
            background-color: #1a1814;
        }

        .product__item {
            text-align: center;
        }
    </style>
}

<div class="section-title">
    <h2>Order</h2>
    <p>Check Our Tasty Menu</p>
</div>

<section id="orderItem" class="menu section-bg">
    <div class="row" data-aos="fade-up" data-aos-delay="100">
        <div class="col-lg-12 d-flex justify-content-center">
            <ul id="menu-flters">
                <li data-filter="*" class="filter-active">全部</li>
                <li data-filter=".filter-appetizer">前菜</li>
                <li data-filter=".filter-soups">湯品</li>
                <li data-filter=".filter-mainMeal">主餐</li>
                <li data-filter=".filter-snacks">點心</li>
                <li data-filter=".filter-dessert">甜點</li>
                <li data-filter=".filter-beverage">飲料</li>
            </ul>
        </div>
    </div>
</section>

<section id="orderArea" class="shop spad menu section-bg" data-aos="fade-up">
    <div class="row" data-aos="fade-up" data-aos-delay="100">
        @foreach (var pro in Model)
        {
            <div class="col-lg-3 col-md-6 col-sm-6 menu-item @pro.CategoryName">
                <div class="product__item">
                    <div class="product__item__pic set-bg">
                        <img src="@Url.Content(pro.MealImg)" style="width:200px; border-radius:15px" />
                        <div class="product__label">
                            <span>@pro.ProductName</span>
                        </div>
                    </div>
                    <div class="product__item__text">
                        <h6><a href="#">@pro.Description</a></h6>
                        <div class="product__item__price">$@pro.UnitPrice</div>
                        <div class="cart_add">
                            <a href="#">Add to cart</a>
                        </div>
                    </div>
                </div>
            </div>
        }
        </div>
</section>
@section Scripts
    {
    <script src="~/orderforhere/startorderjs/jquery.barfiller.js"></script>
        <script src="~/orderforhere/startorderjs/jquery.magnific-popup.min.js"></script>
        <script src="~/orderforhere/startorderjs/jquery.nicescroll.min.js"></script>
        <script src="~/orderforhere/startorderjs/jquery.slicknav.js"></script>
        <script src="~/orderforhere/startorderjs/jquery.nice-select.min.js"></script>
        <script src="~/orderforhere/startorderjs/jquery-3.3.1.min.js"></script>
    <script>
        (function () {
            /**
             * Easy selector helper function
             */
            const select = (el, all = false) => {
                el = el.trim()
                if (all) {
                    return [...document.querySelectorAll(el)]
                } else {
                    return document.querySelector(el)
                }
            }

            /**
             * Easy event listener function
             */
            const on = (type, el, listener, all = false) => {
                let selectEl = select(el, all)
                if (selectEl) {
                    if (all) {
                        selectEl.forEach(e => e.addEventListener(type, listener))
                    } else {
                        selectEl.addEventListener(type, listener)
                    }
                }
            }
            /**
             * Menu isotope and filter
             */
            window.addEventListener('load', () => {
                let orderContainer = select('');
                if (orderContainer) {
                    let menuIsotope = new Isotope(orderContainer, {
                        itemSelector: '.menu-item',
                        layoutMode: 'fitRows'
                    });

                    let menuFilters = select('#menu-flters li', true);

                    on('click', '#menu-flters li', function (e) {
                        e.preventDefault();
                        menuFilters.forEach(function (el) {
                            el.classList.remove('filter-active');
                        });
                        this.classList.add('filter-active');

                        menuIsotope.arrange({
                            filter: this.getAttribute('data-filter')
                        });
                        menuIsotope.on('arrangeComplete', function () {
                            AOS.refresh()
                        });
                    }, true);
                }
            });
        })()
    </script>
    }